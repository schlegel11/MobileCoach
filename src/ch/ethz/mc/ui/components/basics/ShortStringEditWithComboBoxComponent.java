package ch.ethz.mc.ui.components.basics;

import java.util.List;
import java.util.Objects;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import ch.ethz.mc.conf.AdminMessageStrings;
import ch.ethz.mc.ui.components.AbstractStringValueEditComponent;
import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * Provides a short string edit {@link TextField} with a {@link ComboBox} for variables window
 *
 * @author Marcel Schlegel
 */
@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class ShortStringEditWithComboBoxComponent extends AbstractStringValueEditComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout		mainLayout;
	@AutoGenerated
	private GridLayout			buttonLayout;
	@AutoGenerated
	private Button				okButton;
	@AutoGenerated
	private Button				cancelButton;
	@AutoGenerated
	private TextField			stringTextField;
	@AutoGenerated
	private Embedded			arrowRightIcon;
	@AutoGenerated
	private HorizontalLayout	editAreaLayout;
	@AutoGenerated
	private ComboBox			variableComboBox;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ShortStringEditWithComboBoxComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		localize(okButton, AdminMessageStrings.GENERAL__OK);
		localize(cancelButton, AdminMessageStrings.GENERAL__CANCEL);

		// Add enter as click shortcut for default button
		okButton.setClickShortcut(KeyCode.ENTER);
		// Add ESC as click shortcut for cancel button
		cancelButton.setClickShortcut(KeyCode.ESCAPE);

		stringTextField.focus();
	}
	
	@Override
	public void setStringValue(final String value) {
		stringTextField.setValue(value);
	}

	@Override
	public String getStringValue() {
		return stringTextField.getValue();
	}

	@Override
	public void addVariables(List<String> variables) {
		variableComboBox.addItems(variables);
	}

	@Override
	public void registerOkButtonListener(final ClickListener clickListener) {
		okButton.addClickListener(clickListener);
	}

	@Override
	public void registerCancelButtonListener(
			final ClickListener clickListener) {
		cancelButton.addClickListener(clickListener);
	}
	
	public String getSelectedVariable() {
		return Objects.toString(variableComboBox.getValue(), null);
	}
	
	public void setSelectedVariable(String variableName) {
			variableComboBox.setValue(variableName);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("750px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("750px");
		setHeight("-1px");

		// editAreaLayout
		editAreaLayout = buildEditAreaLayout();
		mainLayout.addComponent(editAreaLayout);
		mainLayout.setExpandRatio(editAreaLayout, 1.0f);

		// buttonLayout
		buttonLayout = buildButtonLayout();
		mainLayout.addComponent(buttonLayout);
		mainLayout.setComponentAlignment(buttonLayout, new Alignment(48));

		return mainLayout;
	}
	
	@AutoGenerated
	private HorizontalLayout buildEditAreaLayout() {
		// common part: create layout
		editAreaLayout = new HorizontalLayout();
		editAreaLayout.setImmediate(false);
		editAreaLayout.setWidth("100.0%");
		editAreaLayout.setHeight("100.0%");
		editAreaLayout.setMargin(false);
		editAreaLayout.setSpacing(true);
		
		// stringTextField
		stringTextField = new TextField();
		stringTextField.setImmediate(false);
		stringTextField.setWidth("100.0%");
		stringTextField.setHeight("-1px");
		editAreaLayout.addComponent(stringTextField);
		editAreaLayout.setExpandRatio(stringTextField, 0.6f);
		editAreaLayout.setComponentAlignment(stringTextField, new Alignment(33));

		// arrowLeftIcon
		arrowRightIcon = new Embedded();
		arrowRightIcon.setImmediate(false);
		arrowRightIcon.setWidth("32px");
		arrowRightIcon.setHeight("32px");
		arrowRightIcon.setSource(new ThemeResource("img/arrow-right-icon.png"));
		arrowRightIcon.setType(1);
		arrowRightIcon.setMimeType("image/png");
		editAreaLayout.addComponent(arrowRightIcon);
		editAreaLayout.setComponentAlignment(arrowRightIcon, new Alignment(48));

		// variableComboBox
		variableComboBox = new ComboBox();
		variableComboBox.setImmediate(false);
		variableComboBox.setTextInputAllowed(false);
		variableComboBox.setWidth("100.0%");
		variableComboBox.setHeight("-1px");
		editAreaLayout.addComponent(variableComboBox);
		editAreaLayout.setExpandRatio(variableComboBox, 0.4f);
		editAreaLayout.setComponentAlignment(variableComboBox,
				new Alignment(48));

		return editAreaLayout;
	}
	
	@AutoGenerated
	private GridLayout buildButtonLayout() {
		// common part: create layout
		buttonLayout = new GridLayout();
		buttonLayout.setImmediate(false);
		buttonLayout.setWidth("100.0%");
		buttonLayout.setHeight("-1px");
		buttonLayout.setMargin(true);
		buttonLayout.setSpacing(true);
		buttonLayout.setColumns(2);

		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("!!! Cancel");
		cancelButton.setIcon(new ThemeResource("img/cancel-icon-small.png"));
		cancelButton.setImmediate(true);
		cancelButton.setWidth("140px");
		cancelButton.setHeight("-1px");
		buttonLayout.addComponent(cancelButton, 0, 0);
		buttonLayout.setComponentAlignment(cancelButton, new Alignment(34));

		// okButton
		okButton = new Button();
		okButton.setCaption("!!! OK");
		okButton.setIcon(new ThemeResource("img/ok-icon-small.png"));
		okButton.setImmediate(true);
		okButton.setWidth("140px");
		okButton.setHeight("-1px");
		buttonLayout.addComponent(okButton, 1, 0);
		buttonLayout.setComponentAlignment(okButton, new Alignment(9));

		return buttonLayout;
	}

}
