package ch.ethz.mc.ui.components.basics;

/* ##LICENSE## */
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.VerticalLayout;

import ch.ethz.mc.conf.AdminMessageStrings;
import ch.ethz.mc.ui.components.AbstractCustomComponent;
import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * Provides a abstract rule edit component
 *
 * @author Andreas Filler
 */
@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class AbstractRuleEditComponent extends AbstractCustomComponent {
	@AutoGenerated
	private VerticalLayout				mainLayout;
	@AutoGenerated
	private GridLayout					ruleLayout;
	@AutoGenerated
	private VariableTextFieldComponent	ruleComparisonTermTextFieldComponent;
	@AutoGenerated
	private Embedded					arrowRightIcon2;
	@AutoGenerated
	private ComboBox					ruleEquationSignComboBox;
	@AutoGenerated
	private Embedded					arrowRightIcon1;
	@AutoGenerated
	private VariableTextFieldComponent	ruleTextFieldComponent;
	@AutoGenerated
	private VerticalLayout				commentLayout;
	@AutoGenerated
	private VariableTextFieldComponent	commentVariableTextFieldComponent;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	protected AbstractRuleEditComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		localize(ruleTextFieldComponent,
				AdminMessageStrings.ABSTRACT_RULE_EDITING__RULE_WITH_PLACEHOLDERS);
		localize(ruleComparisonTermTextFieldComponent,
				AdminMessageStrings.ABSTRACT_RULE_EDITING__RULE_COMPARISON_TERM_WITH_PLACEHOLDERS);
		localize(commentVariableTextFieldComponent,
				AdminMessageStrings.ABSTRACT_RULE_EDITING__COMMENT);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");

		// commentLayout
		commentLayout = buildCommentLayout();
		mainLayout.addComponent(commentLayout);

		// ruleLayout
		ruleLayout = buildRuleLayout();
		mainLayout.addComponent(ruleLayout);
		mainLayout.setComponentAlignment(ruleLayout, new Alignment(48));

		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildCommentLayout() {
		// common part: create layout
		commentLayout = new VerticalLayout();
		commentLayout.setImmediate(false);
		commentLayout.setWidth("100.0%");
		commentLayout.setHeight("55px");
		commentLayout.setMargin(false);

		// commentVariableTextFieldComponent
		commentVariableTextFieldComponent = new VariableTextFieldComponent();
		commentVariableTextFieldComponent.setCaption("!!! Comment");
		commentVariableTextFieldComponent.setImmediate(false);
		commentVariableTextFieldComponent.setWidth("100.0%");
		commentVariableTextFieldComponent.setHeight("-1px");
		commentLayout.addComponent(commentVariableTextFieldComponent);

		return commentLayout;
	}

	@AutoGenerated
	private GridLayout buildRuleLayout() {
		// common part: create layout
		ruleLayout = new GridLayout();
		ruleLayout.setImmediate(false);
		ruleLayout.setWidth("100.0%");
		ruleLayout.setHeight("-1px");
		ruleLayout.setMargin(false);
		ruleLayout.setColumns(5);

		// ruleTextFieldComponent
		ruleTextFieldComponent = new VariableTextFieldComponent();
		ruleTextFieldComponent.setCaption("!!! Rule (with placeholders):");
		ruleTextFieldComponent.setImmediate(false);
		ruleTextFieldComponent.setWidth("280px");
		ruleTextFieldComponent.setHeight("-1px");
		ruleLayout.addComponent(ruleTextFieldComponent, 0, 0);
		ruleLayout.setComponentAlignment(ruleTextFieldComponent,
				new Alignment(9));

		// arrowRightIcon1
		arrowRightIcon1 = new Embedded();
		arrowRightIcon1.setImmediate(false);
		arrowRightIcon1.setWidth("32px");
		arrowRightIcon1.setHeight("32px");
		arrowRightIcon1
				.setSource(new ThemeResource("img/arrow-right-icon.png"));
		arrowRightIcon1.setType(1);
		arrowRightIcon1.setMimeType("image/png");
		ruleLayout.addComponent(arrowRightIcon1, 1, 0);
		ruleLayout.setComponentAlignment(arrowRightIcon1, new Alignment(24));

		// ruleEquationSignComboBox
		ruleEquationSignComboBox = new ComboBox();
		ruleEquationSignComboBox.setImmediate(false);
		ruleEquationSignComboBox.setWidth("300px");
		ruleEquationSignComboBox.setHeight("-1px");
		ruleLayout.addComponent(ruleEquationSignComboBox, 2, 0);
		ruleLayout.setComponentAlignment(ruleEquationSignComboBox,
				new Alignment(24));

		// arrowRightIcon2
		arrowRightIcon2 = new Embedded();
		arrowRightIcon2.setImmediate(false);
		arrowRightIcon2.setWidth("32px");
		arrowRightIcon2.setHeight("32px");
		arrowRightIcon2
				.setSource(new ThemeResource("img/arrow-right-icon.png"));
		arrowRightIcon2.setType(1);
		arrowRightIcon2.setMimeType("image/png");
		ruleLayout.addComponent(arrowRightIcon2, 3, 0);
		ruleLayout.setComponentAlignment(arrowRightIcon2, new Alignment(24));

		// ruleComparisonTermTextFieldComponent
		ruleComparisonTermTextFieldComponent = new VariableTextFieldComponent();
		ruleComparisonTermTextFieldComponent
				.setCaption("!!! Comparison term (with placeholders):");
		ruleComparisonTermTextFieldComponent.setImmediate(false);
		ruleComparisonTermTextFieldComponent.setWidth("280px");
		ruleComparisonTermTextFieldComponent.setHeight("-1px");
		ruleLayout.addComponent(ruleComparisonTermTextFieldComponent, 4, 0);
		ruleLayout.setComponentAlignment(ruleComparisonTermTextFieldComponent,
				new Alignment(10));

		return ruleLayout;
	}

}
