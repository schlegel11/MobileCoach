package ch.ethz.mc.ui.components.main_view.interventions.external_systems;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

import ch.ethz.mc.conf.AdminMessageStrings;
import ch.ethz.mc.ui.components.AbstractClosableEditComponent;
import lombok.Data;
import lombok.EqualsAndHashCode;

@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class ExternalSystemsFieldVariableMappingComponent extends AbstractClosableEditComponent{
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	@AutoGenerated
	private VerticalLayout		mainLayout;
	@AutoGenerated
	private VerticalLayout		closeButtonLayout;
	@AutoGenerated
	private Button				closeButton;
	@AutoGenerated
	private HorizontalLayout	mappingButtonLayout;
	@AutoGenerated
	private Button				newButton;
	@AutoGenerated
	private Button				editButton;
	@AutoGenerated
	private Button				deleteButton;
	@AutoGenerated
	private Table				mappingTable;
	
	
	protected ExternalSystemsFieldVariableMappingComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		// manually added
		localize(newButton, AdminMessageStrings.GENERAL__NEW);
		localize(editButton, AdminMessageStrings.GENERAL__EDIT);
		localize(deleteButton, AdminMessageStrings.GENERAL__DELETE);
		localize(closeButton, AdminMessageStrings.GENERAL__CLOSE);

		// set button start state
		setNothingSelected();
	}
	
	protected void setNothingSelected() {
		editButton.setEnabled(false);
		deleteButton.setEnabled(false);
	}

	protected void setSomethingSelected() {
		editButton.setEnabled(true);
		deleteButton.setEnabled(true);
	}

	@Override
	public void registerOkButtonListener(final ClickListener clickListener) {
		closeButton.addClickListener(clickListener);
	}

	@Override
	public void registerCancelButtonListener(final ClickListener clickListener) {
		// Nothing required
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("900px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("900px");
		setHeight("-1px");

		// mappingTable
		mappingTable = new Table();
		mappingTable.setImmediate(false);
		mappingTable.setWidth("100.0%");
		mappingTable.setHeight("150px");
		mainLayout.addComponent(mappingTable);

		// mappingButtonLayout
		mappingButtonLayout = buildButtonLayout();
		mainLayout.addComponent(mappingButtonLayout);

		// closeButtonLayout
		closeButtonLayout = buildCloseButtonLayout();
		mainLayout.addComponent(closeButtonLayout);
		mainLayout.setComponentAlignment(closeButtonLayout, new Alignment(48));

		return mainLayout;
	}
	
	@AutoGenerated
	private HorizontalLayout buildButtonLayout() {
		// common part: create layout
		mappingButtonLayout = new HorizontalLayout();
		mappingButtonLayout.setImmediate(false);
		mappingButtonLayout.setWidth("-1px");
		mappingButtonLayout.setHeight("-1px");
		mappingButtonLayout.setMargin(false);
		mappingButtonLayout.setSpacing(true);

		// newButton
		newButton = new Button();
		newButton.setCaption("!!! New");
		newButton.setIcon(new ThemeResource("img/add-icon-small.png"));
		newButton.setImmediate(true);
		newButton.setWidth("100px");
		newButton.setHeight("-1px");
		mappingButtonLayout.addComponent(newButton);

		// editButton
		editButton = new Button();
		editButton.setCaption("!!! Edit");
		editButton.setIcon(new ThemeResource("img/edit-icon-small.png"));
		editButton.setImmediate(true);
		editButton.setWidth("100px");
		editButton.setHeight("-1px");
		mappingButtonLayout.addComponent(editButton);

		// deleteButton
		deleteButton = new Button();
		deleteButton.setCaption("!!! Delete");
		deleteButton.setIcon(new ThemeResource("img/delete-icon-small.png"));
		deleteButton.setImmediate(true);
		deleteButton.setWidth("100px");
		deleteButton.setHeight("-1px");
		mappingButtonLayout.addComponent(deleteButton);
		
		return mappingButtonLayout;
	}
	
	@AutoGenerated
	private VerticalLayout buildCloseButtonLayout() {
		// common part: create layout
		closeButtonLayout = new VerticalLayout();
		closeButtonLayout.setImmediate(false);
		closeButtonLayout.setWidth("100.0%");
		closeButtonLayout.setHeight("-1px");
		closeButtonLayout.setMargin(true);

		// closeButton
		closeButton = new Button();
		closeButton.setCaption("!!! Close");
		closeButton.setImmediate(true);
		closeButton.setWidth("100px");
		closeButton.setHeight("-1px");
		closeButtonLayout.addComponent(closeButton);
		closeButtonLayout.setComponentAlignment(closeButton, new Alignment(48));

		return closeButtonLayout;
	}
}
