package ch.ethz.mc.modules.message_contest;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.bson.types.ObjectId;

import ch.ethz.mc.conf.AdminMessageStrings;
import ch.ethz.mc.modules.AbstractModule;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public abstract class MessageContestModule extends AbstractModule {
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout	mainLayout;
	@AutoGenerated
	private VerticalLayout	closeButtonLayout;
	@AutoGenerated
	private Button			closeButton;
	@AutoGenerated
	private Button			setResultButton;
	@AutoGenerated
	private Table			relevantVariablesTable;
	@AutoGenerated
	private Label			relevantDialogMessagesLabel;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	protected MessageContestModule(final ObjectId interventionId) {
		super(interventionId);

		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		localize(
				relevantDialogMessagesLabel,
				AdminMessageStrings.MODULES__MESSAGE_CONTEST__MESSAGES_AND_REPLIES);
		localize(
				setResultButton,
				AdminMessageStrings.MODULES__MESSAGE_CONTEST__SET_RESULT_FOR_PARTICIPANTS);
		localize(closeButton, AdminMessageStrings.GENERAL__CLOSE);
	}

	@Override
	protected Button getCloseButton() {
		return closeButton;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("700px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("700px");
		setHeight("-1px");

		// relevantDialogMessagesLabel
		relevantDialogMessagesLabel = new Label();
		relevantDialogMessagesLabel.setImmediate(false);
		relevantDialogMessagesLabel.setWidth("-1px");
		relevantDialogMessagesLabel.setHeight("-1px");
		relevantDialogMessagesLabel
				.setValue("!!! Messages and replies within the last 28 days:");
		mainLayout.addComponent(relevantDialogMessagesLabel);

		// relevantVariablesTable
		relevantVariablesTable = new Table();
		relevantVariablesTable.setImmediate(false);
		relevantVariablesTable.setWidth("100.0%");
		relevantVariablesTable.setHeight("250px");
		mainLayout.addComponent(relevantVariablesTable);

		// setResultButton
		setResultButton = new Button();
		setResultButton.setCaption("!!! Set Result For Selected Participants");
		setResultButton.setImmediate(true);
		setResultButton.setWidth("100.0%");
		setResultButton.setHeight("-1px");
		mainLayout.addComponent(setResultButton);

		// closeButtonLayout
		closeButtonLayout = buildCloseButtonLayout();
		mainLayout.addComponent(closeButtonLayout);

		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildCloseButtonLayout() {
		// common part: create layout
		closeButtonLayout = new VerticalLayout();
		closeButtonLayout.setImmediate(false);
		closeButtonLayout.setWidth("100.0%");
		closeButtonLayout.setHeight("-1px");
		closeButtonLayout.setMargin(true);

		// closeButton
		closeButton = new Button();
		closeButton.setCaption("!!! Close");
		closeButton.setImmediate(true);
		closeButton.setWidth("100px");
		closeButton.setHeight("-1px");
		closeButtonLayout.addComponent(closeButton);
		closeButtonLayout.setComponentAlignment(closeButton, new Alignment(48));

		return closeButtonLayout;
	}

}
