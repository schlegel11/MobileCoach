package org.isgf.mhc.ui.views.components;

import lombok.Data;
import lombok.EqualsAndHashCode;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class MainViewComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout	mainLayout;
	@AutoGenerated
	private Accordion			contentAccordion;
	@AutoGenerated
	private Panel				menuPanel;
	@AutoGenerated
	private VerticalLayout		menuPanelLayout;
	@AutoGenerated
	private GridLayout			buttonsGridLayout;
	@AutoGenerated
	private Button				myProfileButton;
	@AutoGenerated
	private Button				logoutButton;
	@AutoGenerated
	private VerticalLayout		menuButtonsLayout;
	@AutoGenerated
	private Button				welcomeButton;
	@AutoGenerated
	private Label				titleLabel;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainViewComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		contentAccordion.addTab(new WelcomeTabComponent(), "Welcome!");
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setStyleName("main-view");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// menuPanel
		menuPanel = buildMenuPanel();
		mainLayout.addComponent(menuPanel);

		// contentAccordion
		contentAccordion = new Accordion();
		contentAccordion.setStyleName("content-accordion");
		contentAccordion.setImmediate(false);
		contentAccordion.setWidth("100.0%");
		contentAccordion.setHeight("100.0%");
		mainLayout.addComponent(contentAccordion);
		mainLayout.setExpandRatio(contentAccordion, 1.0f);
		mainLayout.setComponentAlignment(contentAccordion, new Alignment(20));

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildMenuPanel() {
		// common part: create layout
		menuPanel = new Panel();
		menuPanel.setImmediate(false);
		menuPanel.setWidth("200px");
		menuPanel.setHeight("100.0%");

		// menuPanelLayout
		menuPanelLayout = buildMenuPanelLayout();
		menuPanel.setContent(menuPanelLayout);

		return menuPanel;
	}

	@AutoGenerated
	private VerticalLayout buildMenuPanelLayout() {
		// common part: create layout
		menuPanelLayout = new VerticalLayout();
		menuPanelLayout.setStyleName("menu-panel");
		menuPanelLayout.setImmediate(false);
		menuPanelLayout.setWidth("100.0%");
		menuPanelLayout.setHeight("100.0%");
		menuPanelLayout.setMargin(true);

		// titleLabel
		titleLabel = new Label();
		titleLabel.setStyleName("title-label");
		titleLabel.setImmediate(false);
		titleLabel.setWidth("100.0%");
		titleLabel.setHeight("30px");
		titleLabel.setValue("Mobile Health Coach");
		menuPanelLayout.addComponent(titleLabel);
		menuPanelLayout.setComponentAlignment(titleLabel, new Alignment(20));

		// menuButtonsLayout
		menuButtonsLayout = buildMenuButtonsLayout();
		menuPanelLayout.addComponent(menuButtonsLayout);
		menuPanelLayout.setExpandRatio(menuButtonsLayout, 1.0f);

		// buttonsGridLayout
		buttonsGridLayout = buildButtonsGridLayout();
		menuPanelLayout.addComponent(buttonsGridLayout);
		menuPanelLayout.setComponentAlignment(buttonsGridLayout, new Alignment(
				24));

		return menuPanelLayout;
	}

	@AutoGenerated
	private VerticalLayout buildMenuButtonsLayout() {
		// common part: create layout
		menuButtonsLayout = new VerticalLayout();
		menuButtonsLayout.setImmediate(false);
		menuButtonsLayout.setWidth("100.0%");
		menuButtonsLayout.setHeight("100.0%");
		menuButtonsLayout.setMargin(false);
		menuButtonsLayout.setSpacing(true);

		// welcomeButton
		welcomeButton = new Button();
		welcomeButton.setCaption("Welcome");
		welcomeButton.setImmediate(false);
		welcomeButton.setWidth("100.0%");
		welcomeButton.setHeight("50px");
		menuButtonsLayout.addComponent(welcomeButton);
		menuButtonsLayout.setComponentAlignment(welcomeButton,
				new Alignment(20));

		return menuButtonsLayout;
	}

	@AutoGenerated
	private GridLayout buildButtonsGridLayout() {
		// common part: create layout
		buttonsGridLayout = new GridLayout();
		buttonsGridLayout.setImmediate(false);
		buttonsGridLayout.setWidth("100.0%");
		buttonsGridLayout.setHeight("-1px");
		buttonsGridLayout.setMargin(false);
		buttonsGridLayout.setSpacing(true);
		buttonsGridLayout.setRows(2);

		// logoutButton
		logoutButton = new Button();
		logoutButton.setCaption("Logout");
		logoutButton.setImmediate(true);
		logoutButton.setWidth("100.0%");
		logoutButton.setHeight("-1px");
		buttonsGridLayout.addComponent(logoutButton, 0, 1);
		buttonsGridLayout
				.setComponentAlignment(logoutButton, new Alignment(20));

		// myProfileButton
		myProfileButton = new Button();
		myProfileButton.setCaption("My profile");
		myProfileButton.setImmediate(false);
		myProfileButton.setWidth("100.0%");
		myProfileButton.setHeight("-1px");
		buttonsGridLayout.addComponent(myProfileButton, 0, 0);
		buttonsGridLayout.setComponentAlignment(myProfileButton, new Alignment(
				20));

		return buttonsGridLayout;
	}
}
