package org.isgf.mhc.ui.views.components.interventions;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.isgf.mhc.conf.AdminMessageStrings;
import org.isgf.mhc.ui.views.components.AbstractModelObjectEditComponent;
import org.isgf.mhc.ui.views.components.basics.MediaObjectIntegrationComponent;
import org.isgf.mhc.ui.views.components.basics.VariableTextFieldComponent;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

/**
 * Provides a monitoring message edit component
 * 
 * @author Andreas Filler
 */
@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class MonitoringMessageEditComponent extends
		AbstractModelObjectEditComponent {
	@AutoGenerated
	private VerticalLayout					mainLayout;

	@AutoGenerated
	private GridLayout						buttonLayout;

	@AutoGenerated
	private Button							okButton;

	@AutoGenerated
	private Button							cancelButton;

	@AutoGenerated
	private GridLayout						gridLayout;

	@AutoGenerated
	private VariableTextFieldComponent		variableTextFieldComponent_2;

	@AutoGenerated
	private Label							label_2;

	@AutoGenerated
	private MediaObjectIntegrationComponent	mediaObjectIntegrationComponent;

	@AutoGenerated
	private Label							label_3;

	@AutoGenerated
	private VariableTextFieldComponent		variableTextFieldComponent_1;

	@AutoGenerated
	private Label							label_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@Override
	public void registerOkButtonListener(final ClickListener clickListener) {
		okButton.addClickListener(clickListener);
	}

	@Override
	public void registerCancelButtonListener(final ClickListener clickListener) {
		cancelButton.addClickListener(clickListener);
	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	protected MonitoringMessageEditComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		localize(okButton, AdminMessageStrings.GENERAL__OK);
		localize(cancelButton, AdminMessageStrings.GENERAL__CANCEL);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("700px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("700px");
		setHeight("-1px");

		// gridLayout
		gridLayout = buildGridLayout();
		mainLayout.addComponent(gridLayout);
		mainLayout.setExpandRatio(gridLayout, 1.0f);

		// buttonLayout
		buttonLayout = buildButtonLayout();
		mainLayout.addComponent(buttonLayout);
		mainLayout.setComponentAlignment(buttonLayout, new Alignment(48));

		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGridLayout() {
		// common part: create layout
		gridLayout = new GridLayout();
		gridLayout.setImmediate(false);
		gridLayout.setWidth("100.0%");
		gridLayout.setHeight("-1px");
		gridLayout.setMargin(false);
		gridLayout.setSpacing(true);
		gridLayout.setColumns(2);
		gridLayout.setRows(3);

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Label");
		gridLayout.addComponent(label_1, 0, 0);

		// variableTextFieldComponent_1
		variableTextFieldComponent_1 = new VariableTextFieldComponent();
		variableTextFieldComponent_1.setImmediate(false);
		variableTextFieldComponent_1.setWidth("500px");
		variableTextFieldComponent_1.setHeight("-1px");
		gridLayout.addComponent(variableTextFieldComponent_1, 1, 0);
		gridLayout.setComponentAlignment(variableTextFieldComponent_1,
				new Alignment(34));

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Label");
		gridLayout.addComponent(label_3, 0, 1);

		// mediaObjectIntegrationComponent
		mediaObjectIntegrationComponent = new MediaObjectIntegrationComponent();
		mediaObjectIntegrationComponent.setImmediate(false);
		mediaObjectIntegrationComponent.setWidth("500px");
		mediaObjectIntegrationComponent.setHeight("200px");
		gridLayout.addComponent(mediaObjectIntegrationComponent, 1, 1);
		gridLayout.setComponentAlignment(mediaObjectIntegrationComponent,
				new Alignment(34));

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Label");
		gridLayout.addComponent(label_2, 0, 2);

		// variableTextFieldComponent_2
		variableTextFieldComponent_2 = new VariableTextFieldComponent();
		variableTextFieldComponent_2.setImmediate(false);
		variableTextFieldComponent_2.setWidth("500px");
		variableTextFieldComponent_2.setHeight("-1px");
		gridLayout.addComponent(variableTextFieldComponent_2, 1, 2);
		gridLayout.setComponentAlignment(variableTextFieldComponent_2,
				new Alignment(34));

		return gridLayout;
	}

	@AutoGenerated
	private GridLayout buildButtonLayout() {
		// common part: create layout
		buttonLayout = new GridLayout();
		buttonLayout.setImmediate(false);
		buttonLayout.setWidth("100.0%");
		buttonLayout.setHeight("-1px");
		buttonLayout.setMargin(true);
		buttonLayout.setSpacing(true);
		buttonLayout.setColumns(2);

		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("!!! Cancel");
		cancelButton.setIcon(new ThemeResource("img/cancel-icon-small.png"));
		cancelButton.setImmediate(true);
		cancelButton.setWidth("140px");
		cancelButton.setHeight("-1px");
		buttonLayout.addComponent(cancelButton, 0, 0);
		buttonLayout.setComponentAlignment(cancelButton, new Alignment(34));

		// okButton
		okButton = new Button();
		okButton.setCaption("!!! OK");
		okButton.setIcon(new ThemeResource("img/ok-icon-small.png"));
		okButton.setImmediate(true);
		okButton.setWidth("140px");
		okButton.setHeight("-1px");
		buttonLayout.addComponent(okButton, 1, 0);
		buttonLayout.setComponentAlignment(okButton, new Alignment(9));

		return buttonLayout;
	}

}
