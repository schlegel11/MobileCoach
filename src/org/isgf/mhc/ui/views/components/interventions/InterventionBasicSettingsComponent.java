package org.isgf.mhc.ui.views.components.interventions;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.isgf.mhc.conf.AdminMessageStrings;
import org.isgf.mhc.conf.ThemeImageStrings;
import org.isgf.mhc.ui.views.components.AbstractCustomComponent;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Button;
import com.vaadin.ui.VerticalLayout;

/**
 * Provides the XYZ component
 * 
 * @author Andreas Filler
 */
@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class InterventionBasicSettingsComponent extends AbstractCustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout	mainLayout;
	@AutoGenerated
	private Button			switchMessagingButton;
	@AutoGenerated
	private Button			switchInterventionButton;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	protected InterventionBasicSettingsComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		localize(
				switchInterventionButton,
				AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_INTERVENTION_BUTTON_INACTIVE);
		localize(
				switchMessagingButton,
				AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_MESSAGING_BUTTON_INACTIVE);

		// set start settings
		adjust(false, false);
	}

	protected void adjust(final boolean interventionStatus,
			final boolean messagingStatus) {
		// Adjust intervention status
		if (interventionStatus) {
			switchInterventionButton.setIcon(new ThemeResource(
					ThemeImageStrings.ACTIVE_ICON));
			localize(
					switchInterventionButton,
					AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_INTERVENTION_BUTTON_ACTIVE);

			switchMessagingButton.setEnabled(true);
		} else {
			switchInterventionButton.setIcon(new ThemeResource(
					ThemeImageStrings.INACTIVE_ICON));
			localize(
					switchInterventionButton,
					AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_INTERVENTION_BUTTON_INACTIVE);

			switchMessagingButton.setEnabled(false);
		}

		// Adjust messaging status
		if (messagingStatus) {
			switchMessagingButton.setIcon(new ThemeResource(
					ThemeImageStrings.ACTIVE_ICON));
			localize(
					switchMessagingButton,
					AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_MESSAGING_BUTTON_ACTIVE);

			switchInterventionButton.setEnabled(false);
		} else {
			switchMessagingButton.setIcon(new ThemeResource(
					ThemeImageStrings.INACTIVE_ICON));
			localize(
					switchMessagingButton,
					AdminMessageStrings.INTERVENTION_BASIC_SETTINGS_TAB__SWITCH_MESSAGING_BUTTON_INACTIVE);

			switchInterventionButton.setEnabled(true);
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");

		// switchInterventionButton
		switchInterventionButton = new Button();
		switchInterventionButton.setCaption("!!! Activate Intervention");
		switchInterventionButton.setImmediate(true);
		switchInterventionButton.setWidth("100.0%");
		switchInterventionButton.setHeight("-1px");
		mainLayout.addComponent(switchInterventionButton);

		// switchMessagingButton
		switchMessagingButton = new Button();
		switchMessagingButton.setCaption("!!! Activate Messaging");
		switchMessagingButton.setImmediate(true);
		switchMessagingButton.setWidth("100.0%");
		switchMessagingButton.setHeight("-1px");
		mainLayout.addComponent(switchMessagingButton);

		return mainLayout;
	}

}
