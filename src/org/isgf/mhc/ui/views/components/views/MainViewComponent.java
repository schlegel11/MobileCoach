package org.isgf.mhc.ui.views.components.views;

import lombok.Data;
import lombok.EqualsAndHashCode;

import org.isgf.mhc.conf.AdminMessageStrings;
import org.isgf.mhc.conf.Messages;
import org.isgf.mhc.ui.views.components.AbstractCustomComponent;
import org.isgf.mhc.ui.views.components.basics.MenuButtonComponent;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

/**
 * Provides the main view component
 * 
 * @author Andreas Filler
 */
@SuppressWarnings("serial")
@Data
@EqualsAndHashCode(callSuper = false)
public class MainViewComponent extends AbstractCustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout	mainLayout;
	@AutoGenerated
	private Accordion			contentAccordion;
	@AutoGenerated
	private Panel				menuPanel;
	@AutoGenerated
	private VerticalLayout		menuPanelLayout;
	@AutoGenerated
	private GridLayout			buttonsGridLayout;
	@AutoGenerated
	private Button				logoutButton;
	@AutoGenerated
	private VerticalLayout		menuButtonsLayout;
	@AutoGenerated
	private AbsoluteLayout		spaceFiller;
	@AutoGenerated
	private MenuButtonComponent	accountButton;
	@AutoGenerated
	private MenuButtonComponent	accessControlButton;
	@AutoGenerated
	private MenuButtonComponent	interventionsButton;
	@AutoGenerated
	private MenuButtonComponent	welcomeButton;
	@AutoGenerated
	private Label				titleLabel;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainViewComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// manually added
		titleLabel.setValue(Messages
				.getAdminString(AdminMessageStrings.APPLICATION__NAME));
		logoutButton.setCaption(Messages
				.getAdminString(AdminMessageStrings.MAIN_VIEW__LOGOUT_BUTTON));

		// Create menu buttons
		welcomeButton.getButtonIcon().setSource(
				new ThemeResource("img/welcome-icon.png"));
		interventionsButton.getButtonIcon().setSource(
				new ThemeResource("img/interventions-icon.png"));
		accessControlButton.getButtonIcon().setSource(
				new ThemeResource("img/access-control-icon.png"));
		accountButton.getButtonIcon().setSource(
				new ThemeResource("img/account-icon.png"));

		localize(welcomeButton.getButtonLabel(),
				AdminMessageStrings.MAIN_VIEW__WELCOME_BUTTON);
		localize(interventionsButton.getButtonLabel(),
				AdminMessageStrings.MAIN_VIEW__INTERVENTIONS_BUTTON);
		localize(accessControlButton.getButtonLabel(),
				AdminMessageStrings.MAIN_VIEW__ACCESS_CONTROL_BUTTON);
		localize(accountButton.getButtonLabel(),
				AdminMessageStrings.MAIN_VIEW__ACCOUNT_BUTTON);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setStyleName("main-view");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// menuPanel
		menuPanel = buildMenuPanel();
		mainLayout.addComponent(menuPanel);

		// contentAccordion
		contentAccordion = new Accordion();
		contentAccordion.setImmediate(false);
		contentAccordion.setWidth("100.0%");
		contentAccordion.setHeight("100.0%");
		mainLayout.addComponent(contentAccordion);
		mainLayout.setExpandRatio(contentAccordion, 1.0f);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildMenuPanel() {
		// common part: create layout
		menuPanel = new Panel();
		menuPanel.setStyleName("menu-panel");
		menuPanel.setImmediate(false);
		menuPanel.setWidth("220px");
		menuPanel.setHeight("100.0%");

		// menuPanelLayout
		menuPanelLayout = buildMenuPanelLayout();
		menuPanel.setContent(menuPanelLayout);

		return menuPanel;
	}

	@AutoGenerated
	private VerticalLayout buildMenuPanelLayout() {
		// common part: create layout
		menuPanelLayout = new VerticalLayout();
		menuPanelLayout.setStyleName("menu-panel");
		menuPanelLayout.setImmediate(false);
		menuPanelLayout.setWidth("100.0%");
		menuPanelLayout.setHeight("100.0%");
		menuPanelLayout.setMargin(true);

		// titleLabel
		titleLabel = new Label();
		titleLabel.setStyleName("title-label");
		titleLabel.setImmediate(false);
		titleLabel.setWidth("100.0%");
		titleLabel.setHeight("32px");
		titleLabel.setValue("!!! Mobile Health Coach");
		menuPanelLayout.addComponent(titleLabel);
		menuPanelLayout.setComponentAlignment(titleLabel, new Alignment(20));

		// menuButtonsLayout
		menuButtonsLayout = buildMenuButtonsLayout();
		menuPanelLayout.addComponent(menuButtonsLayout);
		menuPanelLayout.setExpandRatio(menuButtonsLayout, 1.0f);
		menuPanelLayout.setComponentAlignment(menuButtonsLayout, new Alignment(
				20));

		// buttonsGridLayout
		buttonsGridLayout = buildButtonsGridLayout();
		menuPanelLayout.addComponent(buttonsGridLayout);
		menuPanelLayout.setComponentAlignment(buttonsGridLayout, new Alignment(
				24));

		return menuPanelLayout;
	}

	@AutoGenerated
	private VerticalLayout buildMenuButtonsLayout() {
		// common part: create layout
		menuButtonsLayout = new VerticalLayout();
		menuButtonsLayout.setImmediate(false);
		menuButtonsLayout.setWidth("100.0%");
		menuButtonsLayout.setHeight("100.0%");
		menuButtonsLayout.setMargin(false);
		menuButtonsLayout.setSpacing(true);

		// welcomeButton
		welcomeButton = new MenuButtonComponent();
		welcomeButton.setImmediate(false);
		welcomeButton.setWidth("100.0%");
		welcomeButton.setHeight("80px");
		menuButtonsLayout.addComponent(welcomeButton);
		menuButtonsLayout.setComponentAlignment(welcomeButton,
				new Alignment(20));

		// interventionsButton
		interventionsButton = new MenuButtonComponent();
		interventionsButton.setImmediate(false);
		interventionsButton.setWidth("100.0%");
		interventionsButton.setHeight("80px");
		menuButtonsLayout.addComponent(interventionsButton);
		menuButtonsLayout.setComponentAlignment(interventionsButton,
				new Alignment(20));

		// accessControlButton
		accessControlButton = new MenuButtonComponent();
		accessControlButton.setImmediate(false);
		accessControlButton.setWidth("100.0%");
		accessControlButton.setHeight("80px");
		menuButtonsLayout.addComponent(accessControlButton);
		menuButtonsLayout.setComponentAlignment(accessControlButton,
				new Alignment(20));

		// accountButton
		accountButton = new MenuButtonComponent();
		accountButton.setImmediate(false);
		accountButton.setWidth("100.0%");
		accountButton.setHeight("80px");
		menuButtonsLayout.addComponent(accountButton);
		menuButtonsLayout.setComponentAlignment(accountButton,
				new Alignment(20));

		// spaceFiller
		spaceFiller = new AbsoluteLayout();
		spaceFiller.setImmediate(false);
		spaceFiller.setWidth("100.0%");
		spaceFiller.setHeight("100.0%");
		menuButtonsLayout.addComponent(spaceFiller);
		menuButtonsLayout.setExpandRatio(spaceFiller, 1.0f);
		menuButtonsLayout.setComponentAlignment(spaceFiller, new Alignment(20));

		return menuButtonsLayout;
	}

	@AutoGenerated
	private GridLayout buildButtonsGridLayout() {
		// common part: create layout
		buttonsGridLayout = new GridLayout();
		buttonsGridLayout.setImmediate(false);
		buttonsGridLayout.setWidth("100.0%");
		buttonsGridLayout.setHeight("-1px");
		buttonsGridLayout.setMargin(false);
		buttonsGridLayout.setSpacing(true);
		buttonsGridLayout.setRows(2);

		// logoutButton
		logoutButton = new Button();
		logoutButton.setCaption("!!! Logout");
		logoutButton.setIcon(new ThemeResource("img/logout-icon-small.png"));
		logoutButton.setImmediate(true);
		logoutButton.setWidth("100.0%");
		logoutButton.setHeight("-1px");
		logoutButton.setTabIndex(2);
		buttonsGridLayout.addComponent(logoutButton, 0, 1);
		buttonsGridLayout
				.setComponentAlignment(logoutButton, new Alignment(20));

		return buttonsGridLayout;
	}
}
